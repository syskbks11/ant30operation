/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_winTkb32clGUI (void)
{
  GtkWidget *winTkb32clGUI;
  GtkWidget *hboxAll;
  GtkWidget *tableParam;
  GtkWidget *hseparator18;
  GtkWidget *hseparator20;
  GtkWidget *labObsFileName;
  GtkWidget *hboxObsFileName;
  GtkWidget *entObsFileName;
  GtkWidget *labObs;
  GtkWidget *btnSetParameter;
  GtkWidget *labObsTable;
  GtkWidget *labJST;
  GtkWidget *scrolledwindow15;
  GtkWidget *txtJST;
  GtkWidget *labSourece;
  GtkWidget *scrolledwindow17;
  GtkWidget *txtSource;
  GtkWidget *labLog;
  GtkWidget *hseparator21;
  GtkWidget *hboxObs;
  GtkWidget *btnStartObs;
  GtkWidget *btnStopObs;
  GtkWidget *btnEnd;
  GtkWidget *label23;
  GtkWidget *srlwinParameterList;
  GtkWidget *txtLog;
  GtkWidget *btnParamter;
  GtkWidget *btnAllStatus;
  GtkWidget *tableDevice;
  GtkWidget *labFrontend;
  GtkWidget *labChopper;
  GtkWidget *lab1stIF;
  GtkWidget *lab2ndIF;
  GtkWidget *labSAHardware;
  GtkWidget *scrolledwindow3;
  GtkWidget *txt1stIF;
  GtkWidget *scrolledwindow4;
  GtkWidget *txt2ndIF;
  GtkWidget *scrolledwindow5;
  GtkWidget *txtSAHardware;
  GtkWidget *labStatus;
  GtkWidget *labDevice;
  GtkWidget *labControl;
  GtkWidget *hsepChopper;
  GtkWidget *hsepFrontend;
  GtkWidget *hsep1stIF;
  GtkWidget *hsep2ndIF;
  GtkWidget *vboxChopper;
  GtkWidget *btnChopperOpen;
  GtkWidget *hseparator16;
  GtkWidget *btnChopperClose;
  GtkWidget *hseparator17;
  GtkWidget *btnChopperOrigin;
  GtkWidget *labFrontendNone;
  GtkWidget *table2ndIF;
  GtkWidget *ent2ndIFGHz;
  GtkWidget *ent2ndIFdBm;
  GtkWidget *btn2ndIFGHz;
  GtkWidget *btn2ndIFdBm;
  GtkWidget *hseparator13;
  GtkWidget *vboxSAHardware;
  GtkWidget *hboxSetInteg;
  GtkWidget *entSASec;
  GtkWidget *btnSASec;
  GtkWidget *hseparator12;
  GtkWidget *btnSAStart;
  GtkWidget *lab2ndIFStatus;
  GtkWidget *labSAHardwareStatus;
  GtkWidget *scrolledwindow9;
  GtkWidget *txtFrontend;
  GtkWidget *scrolledwindow10;
  GtkWidget *txtChopper;
  GtkWidget *labFrontendStatus;
  GtkWidget *labChoperStatus;
  GtkWidget *hsepDevice;
  GtkWidget *labACU;
  GtkWidget *labWeather;
  GtkWidget *labWeatherStatus;
  GtkWidget *labWeatherNone;
  GtkWidget *tableACU;
  GtkWidget *entACUSource;
  GtkWidget *btnACUPosOff;
  GtkWidget *btnACUAZEL;
  GtkWidget *btnACUSourceRADEC;
  GtkWidget *hboxACUSetRADEC;
  GtkWidget *entACURAhh;
  GtkWidget *entACURAmm;
  GtkWidget *entACURAss;
  GtkWidget *vseparator2;
  GtkWidget *entACUDEChh;
  GtkWidget *entACUDECmm;
  GtkWidget *entACUDECss;
  GtkWidget *hboxACUSetAZEL;
  GtkWidget *entACUAZ;
  GtkWidget *entACUEL;
  GtkWidget *hboxACUSetPositionOffset;
  GtkWidget *entACUPosOffAZ;
  GtkWidget *entACUPosOffEL;
  GtkWidget *hseparator10;
  GtkWidget *hseparator11;
  GtkWidget *hseparator22;
  GtkWidget *hboxACU1;
  GtkWidget *btnACUDriveUnlock;
  GtkWidget *btnACUPrgTrk;
  GtkWidget *btnACUUnStow;
  GtkWidget *hboxACU2;
  GtkWidget *btnACUStow;
  GtkWidget *btnACUStandby;
  GtkWidget *btnACUDriveLock;
  GtkWidget *hseparator23;
  GtkWidget *scrolledwindow13;
  GtkWidget *txtACU;
  GtkWidget *scrolledwindow14;
  GtkWidget *txtWeather;
  GtkWidget *lab1stIFStatus;
  GtkWidget *labACUStatus;
  GtkWidget *hsepWeather;
  GtkWidget *hsepACU;
  GtkWidget *table1stIF;
  GtkWidget *btn1stIFGHz;
  GtkWidget *btn1stIFdBm;
  GtkWidget *btn1stIFdB;
  GtkWidget *ent1stIFGHz;
  GtkWidget *ent1stIFdBm;
  GtkWidget *entdB;
  GtkWidget *hseparator14;
  GtkWidget *hseparator15;
  GtkWidget *vseparator3;
  GtkWidget *vseparator4;

  winTkb32clGUI = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (winTkb32clGUI), _("tkb32clGUI"));

  hboxAll = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxAll);
  gtk_container_add (GTK_CONTAINER (winTkb32clGUI), hboxAll);

  tableParam = gtk_table_new (12, 2, FALSE);
  gtk_widget_show (tableParam);
  gtk_box_pack_start (GTK_BOX (hboxAll), tableParam, FALSE, TRUE, 0);

  hseparator18 = gtk_hseparator_new ();
  gtk_widget_show (hseparator18);
  gtk_table_attach (GTK_TABLE (tableParam), hseparator18, 0, 2, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hseparator20 = gtk_hseparator_new ();
  gtk_widget_show (hseparator20);
  gtk_table_attach (GTK_TABLE (tableParam), hseparator20, 0, 2, 7, 8,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  labObsFileName = gtk_label_new (_("ObsFileName"));
  gtk_widget_show (labObsFileName);
  gtk_table_attach (GTK_TABLE (tableParam), labObsFileName, 0, 1, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labObsFileName), 0, 0.5);

  hboxObsFileName = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxObsFileName);
  gtk_table_attach (GTK_TABLE (tableParam), hboxObsFileName, 1, 2, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  entObsFileName = gtk_entry_new ();
  gtk_widget_show (entObsFileName);
  gtk_box_pack_start (GTK_BOX (hboxObsFileName), entObsFileName, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entObsFileName, 100, -1);

  labObs = gtk_label_new (_(".obs"));
  gtk_widget_show (labObs);
  gtk_box_pack_start (GTK_BOX (hboxObsFileName), labObs, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (labObs), 0, 0.5);

  btnSetParameter = gtk_button_new_with_mnemonic (_("SetParameter"));
  gtk_widget_show (btnSetParameter);
  gtk_box_pack_start (GTK_BOX (hboxObsFileName), btnSetParameter, FALSE, FALSE, 0);

  labObsTable = gtk_label_new (_("Obs Table"));
  gtk_widget_show (labObsTable);
  gtk_table_attach (GTK_TABLE (tableParam), labObsTable, 0, 2, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labObsTable), 0, 0.5);

  labJST = gtk_label_new (_("JST\nLST"));
  gtk_widget_show (labJST);
  gtk_table_attach (GTK_TABLE (tableParam), labJST, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labJST), 0, 0.5);

  scrolledwindow15 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow15);
  gtk_table_attach (GTK_TABLE (tableParam), scrolledwindow15, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  GTK_WIDGET_UNSET_FLAGS (scrolledwindow15, GTK_CAN_FOCUS);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow15), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow15), GTK_SHADOW_ETCHED_IN);

  txtJST = gtk_text_view_new ();
  gtk_widget_show (txtJST);
  gtk_container_add (GTK_CONTAINER (scrolledwindow15), txtJST);
  GTK_WIDGET_UNSET_FLAGS (txtJST, GTK_CAN_FOCUS);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtJST), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtJST)), _("0000/00/00  00:00:00\n0000/00/00  00:00:00"), -1);

  labSourece = gtk_label_new (_("Source Name\n\n\n\nEphoch\nCoordinate\n\n\n\nSource RADEC\n\nSource LB\nSource AZEL\nDefinition\nVelocity [Km/s]\n\n\n"));
  gtk_widget_show (labSourece);
  gtk_table_attach (GTK_TABLE (tableParam), labSourece, 0, 1, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (labSourece, 100, -1);
  gtk_misc_set_alignment (GTK_MISC (labSourece), 0, 0.5);

  scrolledwindow17 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow17);
  gtk_table_attach (GTK_TABLE (tableParam), scrolledwindow17, 1, 2, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow17), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow17), GTK_SHADOW_ETCHED_IN);

  txtSource = gtk_text_view_new ();
  gtk_widget_show (txtSource);
  gtk_container_add (GTK_CONTAINER (scrolledwindow17), txtSource);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtSource), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtSource)), _("0\n0\n\n0\n00:00:00.00 00:00:00.0\n00:00:00.00 00:00:00.0\n00:00:00.00 00:00:00.0\n0\n0"), -1);

  labLog = gtk_label_new (_("Log"));
  gtk_widget_show (labLog);
  gtk_table_attach (GTK_TABLE (tableParam), labLog, 0, 2, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labLog), 0, 0.5);

  hseparator21 = gtk_hseparator_new ();
  gtk_widget_show (hseparator21);
  gtk_table_attach (GTK_TABLE (tableParam), hseparator21, 0, 2, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hboxObs = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxObs);
  gtk_table_attach (GTK_TABLE (tableParam), hboxObs, 1, 2, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  btnStartObs = gtk_button_new_with_mnemonic (_("StartObs"));
  gtk_widget_show (btnStartObs);
  gtk_box_pack_start (GTK_BOX (hboxObs), btnStartObs, TRUE, FALSE, 0);

  btnStopObs = gtk_button_new_with_mnemonic (_("StopObs"));
  gtk_widget_show (btnStopObs);
  gtk_box_pack_start (GTK_BOX (hboxObs), btnStopObs, TRUE, FALSE, 0);

  btnEnd = gtk_button_new_with_mnemonic (_("End"));
  gtk_widget_show (btnEnd);
  gtk_box_pack_start (GTK_BOX (hboxObs), btnEnd, TRUE, FALSE, 0);

  label23 = gtk_label_new ("");
  gtk_widget_show (label23);
  gtk_table_attach (GTK_TABLE (tableParam), label23, 0, 1, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (label23), 0, 0.5);

  srlwinParameterList = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (srlwinParameterList);
  gtk_table_attach (GTK_TABLE (tableParam), srlwinParameterList, 0, 2, 9, 11,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (srlwinParameterList), GTK_SHADOW_IN);

  txtLog = gtk_text_view_new ();
  gtk_widget_show (txtLog);
  gtk_container_add (GTK_CONTAINER (srlwinParameterList), txtLog);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtLog), FALSE);

  btnParamter = gtk_button_new_with_mnemonic (_("ViewParamter"));
  gtk_widget_show (btnParamter);
  gtk_table_attach (GTK_TABLE (tableParam), btnParamter, 0, 1, 11, 12,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  btnAllStatus = gtk_button_new_with_mnemonic (_("ViewAllStatus"));
  gtk_widget_show (btnAllStatus);
  gtk_table_attach (GTK_TABLE (tableParam), btnAllStatus, 1, 2, 11, 12,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  tableDevice = gtk_table_new (15, 6, FALSE);
  gtk_widget_show (tableDevice);
  gtk_box_pack_start (GTK_BOX (hboxAll), tableDevice, TRUE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (tableDevice), 1);

  labFrontend = gtk_label_new (_("Frontend"));
  gtk_widget_show (labFrontend);
  gtk_table_attach (GTK_TABLE (tableDevice), labFrontend, 2, 3, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labFrontend), 0, 1);

  labChopper = gtk_label_new (_("Chopper"));
  gtk_widget_show (labChopper);
  gtk_table_attach (GTK_TABLE (tableDevice), labChopper, 2, 3, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labChopper), 0, 0.5);

  lab1stIF = gtk_label_new (_("1st IF"));
  gtk_widget_show (lab1stIF);
  gtk_table_attach (GTK_TABLE (tableDevice), lab1stIF, 2, 3, 10, 11,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (lab1stIF), 0, 0.5);

  lab2ndIF = gtk_label_new (_("2nd IF"));
  gtk_widget_show (lab2ndIF);
  gtk_table_attach (GTK_TABLE (tableDevice), lab2ndIF, 2, 3, 12, 13,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (lab2ndIF), 0, 0.5);

  labSAHardware = gtk_label_new (_("SA Hardware"));
  gtk_widget_show (labSAHardware);
  gtk_table_attach (GTK_TABLE (tableDevice), labSAHardware, 2, 3, 14, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labSAHardware), 0, 0.5);

  scrolledwindow3 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow3);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow3, 4, 5, 10, 11,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_SHADOW_ETCHED_IN);

  txt1stIF = gtk_text_view_new ();
  gtk_widget_show (txt1stIF);
  gtk_container_add (GTK_CONTAINER (scrolledwindow3), txt1stIF);
  gtk_widget_set_size_request (txt1stIF, 100, -1);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txt1stIF), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txt1stIF), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txt1stIF)), _("0\n0\n0\n0\n0\n0\n0\n0"), -1);

  scrolledwindow4 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow4);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow4, 4, 5, 12, 13,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow4), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow4), GTK_SHADOW_ETCHED_IN);

  txt2ndIF = gtk_text_view_new ();
  gtk_widget_show (txt2ndIF);
  gtk_container_add (GTK_CONTAINER (scrolledwindow4), txt2ndIF);
  gtk_widget_set_size_request (txt2ndIF, 20, -1);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txt2ndIF), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txt2ndIF), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txt2ndIF)), _("0\n0\n0\n0"), -1);

  scrolledwindow5 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow5);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow5, 4, 5, 14, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow5), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow5), GTK_SHADOW_ETCHED_IN);

  txtSAHardware = gtk_text_view_new ();
  gtk_widget_show (txtSAHardware);
  gtk_container_add (GTK_CONTAINER (scrolledwindow5), txtSAHardware);
  gtk_widget_set_size_request (txtSAHardware, 12, -1);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtSAHardware), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txtSAHardware), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtSAHardware)), _("0\n0\n0\n0\n0"), -1);

  labStatus = gtk_label_new (_("Status"));
  gtk_widget_show (labStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labStatus, 3, 5, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labStatus), 0, 0.5);

  labDevice = gtk_label_new (_("Device"));
  gtk_widget_show (labDevice);
  gtk_table_attach (GTK_TABLE (tableDevice), labDevice, 2, 3, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (labDevice, 80, -1);
  gtk_misc_set_alignment (GTK_MISC (labDevice), 0, 0.5);

  labControl = gtk_label_new (_("Control"));
  gtk_widget_show (labControl);
  gtk_table_attach (GTK_TABLE (tableDevice), labControl, 5, 6, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (labControl, 200, -1);
  gtk_misc_set_alignment (GTK_MISC (labControl), 0, 0.5);

  hsepChopper = gtk_hseparator_new ();
  gtk_widget_show (hsepChopper);
  gtk_table_attach (GTK_TABLE (tableDevice), hsepChopper, 2, 6, 7, 8,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hsepFrontend = gtk_hseparator_new ();
  gtk_widget_show (hsepFrontend);
  gtk_table_attach (GTK_TABLE (tableDevice), hsepFrontend, 2, 6, 9, 10,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hsep1stIF = gtk_hseparator_new ();
  gtk_widget_show (hsep1stIF);
  gtk_table_attach (GTK_TABLE (tableDevice), hsep1stIF, 2, 6, 11, 12,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hsep2ndIF = gtk_hseparator_new ();
  gtk_widget_show (hsep2ndIF);
  gtk_table_attach (GTK_TABLE (tableDevice), hsep2ndIF, 2, 6, 13, 14,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  vboxChopper = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vboxChopper);
  gtk_table_attach (GTK_TABLE (tableDevice), vboxChopper, 5, 6, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  btnChopperOpen = gtk_button_new_with_mnemonic (_("Open"));
  gtk_widget_show (btnChopperOpen);
  gtk_box_pack_start (GTK_BOX (vboxChopper), btnChopperOpen, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btnChopperOpen), 2);

  hseparator16 = gtk_hseparator_new ();
  gtk_widget_show (hseparator16);
  gtk_box_pack_start (GTK_BOX (vboxChopper), hseparator16, TRUE, TRUE, 0);

  btnChopperClose = gtk_button_new_with_mnemonic (_("Close"));
  gtk_widget_show (btnChopperClose);
  gtk_box_pack_start (GTK_BOX (vboxChopper), btnChopperClose, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btnChopperClose), 2);

  hseparator17 = gtk_hseparator_new ();
  gtk_widget_show (hseparator17);
  gtk_box_pack_start (GTK_BOX (vboxChopper), hseparator17, TRUE, TRUE, 0);

  btnChopperOrigin = gtk_button_new_with_mnemonic (_("Origin"));
  gtk_widget_show (btnChopperOrigin);
  gtk_box_pack_start (GTK_BOX (vboxChopper), btnChopperOrigin, FALSE, FALSE, 0);

  labFrontendNone = gtk_label_new ("");
  gtk_widget_show (labFrontendNone);
  gtk_table_attach (GTK_TABLE (tableDevice), labFrontendNone, 5, 6, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  table2ndIF = gtk_table_new (3, 2, FALSE);
  gtk_widget_show (table2ndIF);
  gtk_table_attach (GTK_TABLE (tableDevice), table2ndIF, 5, 6, 12, 13,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  ent2ndIFGHz = gtk_entry_new ();
  gtk_widget_show (ent2ndIFGHz);
  gtk_table_attach (GTK_TABLE (table2ndIF), ent2ndIFGHz, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (ent2ndIFGHz, 80, -1);

  ent2ndIFdBm = gtk_entry_new ();
  gtk_widget_show (ent2ndIFdBm);
  gtk_table_attach (GTK_TABLE (table2ndIF), ent2ndIFdBm, 0, 1, 2, 3,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (ent2ndIFdBm, 80, -1);

  btn2ndIFGHz = gtk_button_new_with_mnemonic (_("SetLo2 [GHz]"));
  gtk_widget_show (btn2ndIFGHz);
  gtk_table_attach (GTK_TABLE (table2ndIF), btn2ndIFGHz, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btn2ndIFGHz), 1);

  btn2ndIFdBm = gtk_button_new_with_mnemonic (_("SetLo2 [dBm]"));
  gtk_widget_show (btn2ndIFdBm);
  gtk_table_attach (GTK_TABLE (table2ndIF), btn2ndIFdBm, 1, 2, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btn2ndIFdBm), 1);

  hseparator13 = gtk_hseparator_new ();
  gtk_widget_show (hseparator13);
  gtk_table_attach (GTK_TABLE (table2ndIF), hseparator13, 0, 2, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  vboxSAHardware = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vboxSAHardware);
  gtk_table_attach (GTK_TABLE (tableDevice), vboxSAHardware, 5, 6, 14, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hboxSetInteg = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxSetInteg);
  gtk_box_pack_start (GTK_BOX (vboxSAHardware), hboxSetInteg, FALSE, FALSE, 0);

  entSASec = gtk_entry_new ();
  gtk_widget_show (entSASec);
  gtk_box_pack_start (GTK_BOX (hboxSetInteg), entSASec, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entSASec, 80, -1);

  btnSASec = gtk_button_new_with_mnemonic (_("Set Integ [sec]"));
  gtk_widget_show (btnSASec);
  gtk_box_pack_start (GTK_BOX (hboxSetInteg), btnSASec, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btnSASec), 1);

  hseparator12 = gtk_hseparator_new ();
  gtk_widget_show (hseparator12);
  gtk_box_pack_start (GTK_BOX (vboxSAHardware), hseparator12, FALSE, TRUE, 0);

  btnSAStart = gtk_button_new_with_mnemonic (_("Integ Start"));
  gtk_widget_show (btnSAStart);
  gtk_box_pack_start (GTK_BOX (vboxSAHardware), btnSAStart, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btnSAStart), 1);

  lab2ndIFStatus = gtk_label_new (_("Status\nLoInterval [sec]\nCmd 2ndLoFreq [GHz] Amp [dBm]\nReal 2ndLoFreq [GHz] Amp [dBm]"));
  gtk_widget_show (lab2ndIFStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), lab2ndIFStatus, 3, 4, 12, 13,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (lab2ndIFStatus), 0, 0);

  labSAHardwareStatus = gtk_label_new (_("Status\nExec code\nError code\nTsys [K]\nTotal Power [dBm/Hz]"));
  gtk_widget_show (labSAHardwareStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labSAHardwareStatus, 3, 4, 14, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labSAHardwareStatus), 0, 0);

  scrolledwindow9 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow9);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow9, 4, 5, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_SHADOW_ETCHED_IN);

  txtFrontend = gtk_text_view_new ();
  gtk_widget_show (txtFrontend);
  gtk_container_add (GTK_CONTAINER (scrolledwindow9), txtFrontend);
  gtk_widget_set_size_request (txtFrontend, 36, 36);
  GTK_WIDGET_UNSET_FLAGS (txtFrontend, GTK_CAN_FOCUS);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtFrontend), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (txtFrontend), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txtFrontend), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtFrontend)), _("0\n0\n0"), -1);

  scrolledwindow10 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow10);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow10, 4, 5, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_widget_set_size_request (scrolledwindow10, -1, 52);
  GTK_WIDGET_UNSET_FLAGS (scrolledwindow10, GTK_CAN_FOCUS);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow10), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow10), GTK_SHADOW_ETCHED_IN);

  txtChopper = gtk_text_view_new ();
  gtk_widget_show (txtChopper);
  gtk_container_add (GTK_CONTAINER (scrolledwindow10), txtChopper);
  gtk_widget_set_size_request (txtChopper, 70, -1);
  GTK_WIDGET_UNSET_FLAGS (txtChopper, GTK_CAN_FOCUS);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtChopper), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (txtChopper), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txtChopper), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtChopper)), _("0\n0\n0\n0"), -1);

  labFrontendStatus = gtk_label_new (_("Status\nTemp [K]\nVacuum [Pa]"));
  gtk_widget_show (labFrontendStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labFrontendStatus, 3, 4, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labFrontendStatus), 0, 0);

  labChoperStatus = gtk_label_new (_("Status\nMoter Status\nTemp1 [K]\nTemp2 [K]"));
  gtk_widget_show (labChoperStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labChoperStatus, 3, 4, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_widget_set_size_request (labChoperStatus, 100, -1);
  gtk_misc_set_alignment (GTK_MISC (labChoperStatus), 0, 0);

  hsepDevice = gtk_hseparator_new ();
  gtk_widget_show (hsepDevice);
  gtk_table_attach (GTK_TABLE (tableDevice), hsepDevice, 2, 6, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  labACU = gtk_label_new (_("ACU"));
  gtk_widget_show (labACU);
  gtk_table_attach (GTK_TABLE (tableDevice), labACU, 2, 3, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labACU), 0, 0.5);

  labWeather = gtk_label_new (_("Weather"));
  gtk_widget_show (labWeather);
  gtk_table_attach (GTK_TABLE (tableDevice), labWeather, 2, 3, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labWeather), 0, 0.5);

  labWeatherStatus = gtk_label_new (_("Status\nTamb [K]\nPamb [hPa]\nPwater [hPa]\nWind Direct [deg]\nWind Avg [m/sec]\nWind Max [m/sec]"));
  gtk_widget_show (labWeatherStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labWeatherStatus, 3, 4, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (labWeatherStatus, 100, -1);
  gtk_misc_set_alignment (GTK_MISC (labWeatherStatus), 0, 0.5);

  labWeatherNone = gtk_label_new ("");
  gtk_widget_show (labWeatherNone);
  gtk_table_attach (GTK_TABLE (tableDevice), labWeatherNone, 5, 6, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  tableACU = gtk_table_new (10, 2, FALSE);
  gtk_widget_show (tableACU);
  gtk_table_attach (GTK_TABLE (tableDevice), tableACU, 5, 6, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  entACUSource = gtk_entry_new ();
  gtk_widget_show (entACUSource);
  gtk_table_attach (GTK_TABLE (tableACU), entACUSource, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (entACUSource, 120, -1);

  btnACUPosOff = gtk_button_new_with_mnemonic (_("SetPositionOffset [sec]"));
  gtk_widget_show (btnACUPosOff);
  gtk_table_attach (GTK_TABLE (tableACU), btnACUPosOff, 1, 2, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  btnACUAZEL = gtk_button_new_with_mnemonic (_("SetAZEL [deg]"));
  gtk_widget_show (btnACUAZEL);
  gtk_table_attach (GTK_TABLE (tableACU), btnACUAZEL, 1, 2, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  btnACUSourceRADEC = gtk_button_new_with_mnemonic (_("SetSourceName\nSet RADEC"));
  gtk_widget_show (btnACUSourceRADEC);
  gtk_table_attach (GTK_TABLE (tableACU), btnACUSourceRADEC, 1, 2, 0, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  hboxACUSetRADEC = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxACUSetRADEC);
  gtk_table_attach (GTK_TABLE (tableACU), hboxACUSetRADEC, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  entACURAhh = gtk_entry_new ();
  gtk_widget_show (entACURAhh);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACURAhh, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACURAhh, 20, -1);

  entACURAmm = gtk_entry_new ();
  gtk_widget_show (entACURAmm);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACURAmm, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACURAmm, 20, -1);

  entACURAss = gtk_entry_new ();
  gtk_widget_show (entACURAss);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACURAss, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACURAss, 20, -1);

  vseparator2 = gtk_vseparator_new ();
  gtk_widget_show (vseparator2);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), vseparator2, TRUE, TRUE, 0);
  gtk_widget_set_size_request (vseparator2, 5, -1);

  entACUDEChh = gtk_entry_new ();
  gtk_widget_show (entACUDEChh);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACUDEChh, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUDEChh, 20, -1);

  entACUDECmm = gtk_entry_new ();
  gtk_widget_show (entACUDECmm);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACUDECmm, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUDECmm, 20, -1);

  entACUDECss = gtk_entry_new ();
  gtk_widget_show (entACUDECss);
  gtk_box_pack_start (GTK_BOX (hboxACUSetRADEC), entACUDECss, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUDECss, 20, -1);
  gtk_entry_set_max_length (GTK_ENTRY (entACUDECss), 2);

  hboxACUSetAZEL = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxACUSetAZEL);
  gtk_table_attach (GTK_TABLE (tableACU), hboxACUSetAZEL, 0, 1, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  entACUAZ = gtk_entry_new ();
  gtk_widget_show (entACUAZ);
  gtk_box_pack_start (GTK_BOX (hboxACUSetAZEL), entACUAZ, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUAZ, 30, -1);

  entACUEL = gtk_entry_new ();
  gtk_widget_show (entACUEL);
  gtk_box_pack_start (GTK_BOX (hboxACUSetAZEL), entACUEL, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUEL, 30, -1);

  hboxACUSetPositionOffset = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxACUSetPositionOffset);
  gtk_table_attach (GTK_TABLE (tableACU), hboxACUSetPositionOffset, 0, 1, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  entACUPosOffAZ = gtk_entry_new ();
  gtk_widget_show (entACUPosOffAZ);
  gtk_box_pack_start (GTK_BOX (hboxACUSetPositionOffset), entACUPosOffAZ, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUPosOffAZ, 30, -1);

  entACUPosOffEL = gtk_entry_new ();
  gtk_widget_show (entACUPosOffEL);
  gtk_box_pack_start (GTK_BOX (hboxACUSetPositionOffset), entACUPosOffEL, TRUE, TRUE, 0);
  gtk_widget_set_size_request (entACUPosOffEL, 30, -1);

  hseparator10 = gtk_hseparator_new ();
  gtk_widget_show (hseparator10);
  gtk_table_attach (GTK_TABLE (tableACU), hseparator10, 0, 2, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hseparator11 = gtk_hseparator_new ();
  gtk_widget_show (hseparator11);
  gtk_table_attach (GTK_TABLE (tableACU), hseparator11, 0, 2, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hseparator22 = gtk_hseparator_new ();
  gtk_widget_show (hseparator22);
  gtk_table_attach (GTK_TABLE (tableACU), hseparator22, 0, 2, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);

  hboxACU1 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxACU1);
  gtk_table_attach (GTK_TABLE (tableACU), hboxACU1, 0, 2, 7, 8,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  btnACUDriveUnlock = gtk_button_new_with_mnemonic (_("Drive Unlock"));
  gtk_widget_show (btnACUDriveUnlock);
  gtk_box_pack_start (GTK_BOX (hboxACU1), btnACUDriveUnlock, TRUE, FALSE, 0);

  btnACUPrgTrk = gtk_button_new_with_mnemonic (_("PrgTrk"));
  gtk_widget_show (btnACUPrgTrk);
  gtk_box_pack_start (GTK_BOX (hboxACU1), btnACUPrgTrk, TRUE, FALSE, 0);

  btnACUUnStow = gtk_button_new_with_mnemonic (_("unStow"));
  gtk_widget_show (btnACUUnStow);
  gtk_box_pack_start (GTK_BOX (hboxACU1), btnACUUnStow, TRUE, FALSE, 0);

  hboxACU2 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hboxACU2);
  gtk_table_attach (GTK_TABLE (tableACU), hboxACU2, 0, 2, 9, 10,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  btnACUStow = gtk_button_new_with_mnemonic (_("Stow"));
  gtk_widget_show (btnACUStow);
  gtk_box_pack_start (GTK_BOX (hboxACU2), btnACUStow, TRUE, FALSE, 0);

  btnACUStandby = gtk_button_new_with_mnemonic (_("Standby"));
  gtk_widget_show (btnACUStandby);
  gtk_box_pack_start (GTK_BOX (hboxACU2), btnACUStandby, TRUE, FALSE, 0);

  btnACUDriveLock = gtk_button_new_with_mnemonic (_("Drive Lock"));
  gtk_widget_show (btnACUDriveLock);
  gtk_box_pack_start (GTK_BOX (hboxACU2), btnACUDriveLock, TRUE, FALSE, 0);

  hseparator23 = gtk_hseparator_new ();
  gtk_widget_show (hseparator23);
  gtk_table_attach (GTK_TABLE (tableACU), hseparator23, 0, 2, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);

  scrolledwindow13 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow13);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow13, 4, 5, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  GTK_WIDGET_UNSET_FLAGS (scrolledwindow13, GTK_CAN_FOCUS);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow13), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow13), GTK_SHADOW_ETCHED_IN);

  txtACU = gtk_text_view_new ();
  gtk_widget_show (txtACU);
  gtk_container_add (GTK_CONTAINER (scrolledwindow13), txtACU);
  gtk_widget_set_size_request (txtACU, 106, -1);
  GTK_WIDGET_UNSET_FLAGS (txtACU, GTK_CAN_FOCUS);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtACU), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (txtACU), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txtACU), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtACU)), _("0\n0 0\n0 0\n0 0\n0 0\n0"), -1);

  scrolledwindow14 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow14);
  gtk_table_attach (GTK_TABLE (tableDevice), scrolledwindow14, 4, 5, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow14), GTK_POLICY_NEVER, GTK_POLICY_NEVER);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow14), GTK_SHADOW_ETCHED_IN);

  txtWeather = gtk_text_view_new ();
  gtk_widget_show (txtWeather);
  gtk_container_add (GTK_CONTAINER (scrolledwindow14), txtWeather);
  GTK_WIDGET_UNSET_FLAGS (txtWeather, GTK_CAN_FOCUS);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtWeather), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (txtWeather), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (txtWeather), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (txtWeather)), _("0\n0\n0\n0\n0\n0\n0"), -1);

  lab1stIFStatus = gtk_label_new (_("Status\nFtrack [GHz]\nFif [GHz]\nLoInterval [sec]\nCmd 1stLo Freq [GHz] Amp [dBm]\nCmd         Att [dB]\nReal 1stLo Freq [GHz] Amp [dBm]\nReal         Att [dB]"));
  gtk_widget_show (lab1stIFStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), lab1stIFStatus, 3, 4, 10, 11,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (lab1stIFStatus), 0, 0);

  labACUStatus = gtk_label_new (_("Status\nPosition Offset AZEL [sec]\nCmd AZEL [deg]\nReal AZEL [deg]\nErr AZEL [deg]\nTracking Status"));
  gtk_widget_show (labACUStatus);
  gtk_table_attach (GTK_TABLE (tableDevice), labACUStatus, 3, 4, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (labACUStatus), 0, 0);

  hsepWeather = gtk_hseparator_new ();
  gtk_widget_show (hsepWeather);
  gtk_table_attach (GTK_TABLE (tableDevice), hsepWeather, 2, 6, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hsepACU = gtk_hseparator_new ();
  gtk_widget_show (hsepACU);
  gtk_table_attach (GTK_TABLE (tableDevice), hsepACU, 2, 6, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  table1stIF = gtk_table_new (5, 2, FALSE);
  gtk_widget_show (table1stIF);
  gtk_table_attach (GTK_TABLE (tableDevice), table1stIF, 5, 6, 10, 11,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  btn1stIFGHz = gtk_button_new_with_mnemonic (_("SetLo1 [GHz]"));
  gtk_widget_show (btn1stIFGHz);
  gtk_table_attach (GTK_TABLE (table1stIF), btn1stIFGHz, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btn1stIFGHz), 1);

  btn1stIFdBm = gtk_button_new_with_mnemonic (_("SetLo1 [dBm]"));
  gtk_widget_show (btn1stIFdBm);
  gtk_table_attach (GTK_TABLE (table1stIF), btn1stIFdBm, 1, 2, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btn1stIFdBm), 1);

  btn1stIFdB = gtk_button_new_with_mnemonic (_("SetAtt [dB]"));
  gtk_widget_show (btn1stIFdB);
  gtk_table_attach (GTK_TABLE (table1stIF), btn1stIFdB, 1, 2, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_container_set_border_width (GTK_CONTAINER (btn1stIFdB), 1);

  ent1stIFGHz = gtk_entry_new ();
  gtk_widget_show (ent1stIFGHz);
  gtk_table_attach (GTK_TABLE (table1stIF), ent1stIFGHz, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (ent1stIFGHz, 80, -1);

  ent1stIFdBm = gtk_entry_new ();
  gtk_widget_show (ent1stIFdBm);
  gtk_table_attach (GTK_TABLE (table1stIF), ent1stIFdBm, 0, 1, 2, 3,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (ent1stIFdBm, 80, -1);

  entdB = gtk_entry_new ();
  gtk_widget_show (entdB);
  gtk_table_attach (GTK_TABLE (table1stIF), entdB, 0, 1, 4, 5,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_widget_set_size_request (entdB, 80, -1);

  hseparator14 = gtk_hseparator_new ();
  gtk_widget_show (hseparator14);
  gtk_table_attach (GTK_TABLE (table1stIF), hseparator14, 0, 2, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  hseparator15 = gtk_hseparator_new ();
  gtk_widget_show (hseparator15);
  gtk_table_attach (GTK_TABLE (table1stIF), hseparator15, 0, 2, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  vseparator3 = gtk_vseparator_new ();
  gtk_widget_show (vseparator3);
  gtk_table_attach (GTK_TABLE (tableDevice), vseparator3, 0, 1, 0, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  vseparator4 = gtk_vseparator_new ();
  gtk_widget_show (vseparator4);
  gtk_table_attach (GTK_TABLE (tableDevice), vseparator4, 1, 2, 0, 15,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (GTK_FILL), 0, 0);

  g_signal_connect ((gpointer) winTkb32clGUI, "destroy",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect ((gpointer) btnSetParameter, "clicked",
                    G_CALLBACK (on_btnSetParameter_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnStartObs, "clicked",
                    G_CALLBACK (on_btnStartObs_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnStopObs, "clicked",
                    G_CALLBACK (on_btnStopObs_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnEnd, "clicked",
                    G_CALLBACK (on_btnEnd_clicked),
                    NULL);
  g_signal_connect_swapped ((gpointer) btnParamter, "clicked",
                            G_CALLBACK (gtk_widget_show),
                            GTK_OBJECT (winParameterList));
  g_signal_connect ((gpointer) btnChopperOpen, "clicked",
                    G_CALLBACK (on_btnChopperOpen_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnChopperClose, "clicked",
                    G_CALLBACK (on_btnChopperClose_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnChopperOrigin, "clicked",
                    G_CALLBACK (on_btnChopperOrigin_clicked),
                    NULL);
  g_signal_connect ((gpointer) labFrontendNone, "destroy_event",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect ((gpointer) btn2ndIFGHz, "clicked",
                    G_CALLBACK (on_btn2ndIFGHz_clicked),
                    NULL);
  g_signal_connect ((gpointer) btn2ndIFdBm, "clicked",
                    G_CALLBACK (on_btn2ndIFdBm_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnSASec, "clicked",
                    G_CALLBACK (on_btnSASec_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnSAStart, "clicked",
                    G_CALLBACK (on_btnSAStart_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUPosOff, "clicked",
                    G_CALLBACK (on_btnACUPosOff_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUAZEL, "clicked",
                    G_CALLBACK (on_btnACUAZEL_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUSourceRADEC, "clicked",
                    G_CALLBACK (on_btnACUSourceRADEC_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUDriveUnlock, "clicked",
                    G_CALLBACK (on_btnACUDriveUnlock_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUPrgTrk, "clicked",
                    G_CALLBACK (on_btnACUPrgTrk_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUUnStow, "clicked",
                    G_CALLBACK (on_btnACUUnStow_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUStow, "clicked",
                    G_CALLBACK (on_btnACUStow_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUStandby, "clicked",
                    G_CALLBACK (on_btnACUStandby_clicked),
                    NULL);
  g_signal_connect ((gpointer) btnACUDriveLock, "clicked",
                    G_CALLBACK (on_btnACUDriveLock_clicked),
                    NULL);
  g_signal_connect ((gpointer) btn1stIFGHz, "clicked",
                    G_CALLBACK (on_btn1stIFGHz_clicked),
                    NULL);
  g_signal_connect ((gpointer) btn1stIFdBm, "clicked",
                    G_CALLBACK (on_btn1stIFdBm_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (winTkb32clGUI, winTkb32clGUI, "winTkb32clGUI");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxAll, "hboxAll");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, tableParam, "tableParam");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator18, "hseparator18");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator20, "hseparator20");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labObsFileName, "labObsFileName");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxObsFileName, "hboxObsFileName");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entObsFileName, "entObsFileName");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labObs, "labObs");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnSetParameter, "btnSetParameter");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labObsTable, "labObsTable");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labJST, "labJST");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow15, "scrolledwindow15");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtJST, "txtJST");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labSourece, "labSourece");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow17, "scrolledwindow17");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtSource, "txtSource");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labLog, "labLog");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator21, "hseparator21");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxObs, "hboxObs");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnStartObs, "btnStartObs");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnStopObs, "btnStopObs");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnEnd, "btnEnd");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, label23, "label23");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, srlwinParameterList, "srlwinParameterList");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtLog, "txtLog");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnParamter, "btnParamter");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnAllStatus, "btnAllStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, tableDevice, "tableDevice");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labFrontend, "labFrontend");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labChopper, "labChopper");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, lab1stIF, "lab1stIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, lab2ndIF, "lab2ndIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labSAHardware, "labSAHardware");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow3, "scrolledwindow3");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txt1stIF, "txt1stIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow4, "scrolledwindow4");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txt2ndIF, "txt2ndIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow5, "scrolledwindow5");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtSAHardware, "txtSAHardware");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labStatus, "labStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labDevice, "labDevice");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labControl, "labControl");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsepChopper, "hsepChopper");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsepFrontend, "hsepFrontend");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsep1stIF, "hsep1stIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsep2ndIF, "hsep2ndIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, vboxChopper, "vboxChopper");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnChopperOpen, "btnChopperOpen");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator16, "hseparator16");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnChopperClose, "btnChopperClose");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator17, "hseparator17");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnChopperOrigin, "btnChopperOrigin");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labFrontendNone, "labFrontendNone");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, table2ndIF, "table2ndIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, ent2ndIFGHz, "ent2ndIFGHz");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, ent2ndIFdBm, "ent2ndIFdBm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btn2ndIFGHz, "btn2ndIFGHz");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btn2ndIFdBm, "btn2ndIFdBm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator13, "hseparator13");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, vboxSAHardware, "vboxSAHardware");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxSetInteg, "hboxSetInteg");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entSASec, "entSASec");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnSASec, "btnSASec");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator12, "hseparator12");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnSAStart, "btnSAStart");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, lab2ndIFStatus, "lab2ndIFStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labSAHardwareStatus, "labSAHardwareStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow9, "scrolledwindow9");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtFrontend, "txtFrontend");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow10, "scrolledwindow10");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtChopper, "txtChopper");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labFrontendStatus, "labFrontendStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labChoperStatus, "labChoperStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsepDevice, "hsepDevice");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labACU, "labACU");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labWeather, "labWeather");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labWeatherStatus, "labWeatherStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labWeatherNone, "labWeatherNone");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, tableACU, "tableACU");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUSource, "entACUSource");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUPosOff, "btnACUPosOff");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUAZEL, "btnACUAZEL");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUSourceRADEC, "btnACUSourceRADEC");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxACUSetRADEC, "hboxACUSetRADEC");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACURAhh, "entACURAhh");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACURAmm, "entACURAmm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACURAss, "entACURAss");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, vseparator2, "vseparator2");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUDEChh, "entACUDEChh");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUDECmm, "entACUDECmm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUDECss, "entACUDECss");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxACUSetAZEL, "hboxACUSetAZEL");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUAZ, "entACUAZ");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUEL, "entACUEL");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxACUSetPositionOffset, "hboxACUSetPositionOffset");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUPosOffAZ, "entACUPosOffAZ");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entACUPosOffEL, "entACUPosOffEL");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator10, "hseparator10");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator11, "hseparator11");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator22, "hseparator22");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxACU1, "hboxACU1");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUDriveUnlock, "btnACUDriveUnlock");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUPrgTrk, "btnACUPrgTrk");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUUnStow, "btnACUUnStow");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hboxACU2, "hboxACU2");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUStow, "btnACUStow");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUStandby, "btnACUStandby");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btnACUDriveLock, "btnACUDriveLock");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator23, "hseparator23");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow13, "scrolledwindow13");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtACU, "txtACU");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, scrolledwindow14, "scrolledwindow14");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, txtWeather, "txtWeather");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, lab1stIFStatus, "lab1stIFStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, labACUStatus, "labACUStatus");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsepWeather, "hsepWeather");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hsepACU, "hsepACU");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, table1stIF, "table1stIF");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btn1stIFGHz, "btn1stIFGHz");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btn1stIFdBm, "btn1stIFdBm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, btn1stIFdB, "btn1stIFdB");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, ent1stIFGHz, "ent1stIFGHz");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, ent1stIFdBm, "ent1stIFdBm");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, entdB, "entdB");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator14, "hseparator14");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, hseparator15, "hseparator15");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, vseparator3, "vseparator3");
  GLADE_HOOKUP_OBJECT (winTkb32clGUI, vseparator4, "vseparator4");

  return winTkb32clGUI;
}

GtkWidget*
create_winAllStatus (void)
{
  GtkWidget *winAllStatus;
  GtkWidget *scrolledwindow8;
  GtkWidget *textview1;

  winAllStatus = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (winAllStatus, 400, 300);
  gtk_window_set_title (GTK_WINDOW (winAllStatus), _("AllStatus"));

  scrolledwindow8 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow8);
  gtk_container_add (GTK_CONTAINER (winAllStatus), scrolledwindow8);

  textview1 = gtk_text_view_new ();
  gtk_widget_show (textview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow8), textview1);
  gtk_widget_set_size_request (textview1, 400, 300);

  g_signal_connect ((gpointer) winAllStatus, "destroy",
                    G_CALLBACK (gtk_widget_destroy),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (winAllStatus, winAllStatus, "winAllStatus");
  GLADE_HOOKUP_OBJECT (winAllStatus, scrolledwindow8, "scrolledwindow8");
  GLADE_HOOKUP_OBJECT (winAllStatus, textview1, "textview1");

  return winAllStatus;
}

GtkWidget*
create_winParameterList (void)
{
  GtkWidget *winParameterList;
  GtkWidget *scrolledwindow18;
  GtkWidget *txtParameterList;

  winParameterList = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (winParameterList), _("window1"));

  scrolledwindow18 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow18);
  gtk_container_add (GTK_CONTAINER (winParameterList), scrolledwindow18);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow18), GTK_SHADOW_IN);

  txtParameterList = gtk_text_view_new ();
  gtk_widget_show (txtParameterList);
  gtk_container_add (GTK_CONTAINER (scrolledwindow18), txtParameterList);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (txtParameterList), FALSE);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (winParameterList, winParameterList, "winParameterList");
  GLADE_HOOKUP_OBJECT (winParameterList, scrolledwindow18, "scrolledwindow18");
  GLADE_HOOKUP_OBJECT (winParameterList, txtParameterList, "txtParameterList");

  return winParameterList;
}

